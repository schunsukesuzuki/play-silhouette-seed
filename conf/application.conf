# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.http.secret.key="changeme"

# The application languages
# ~~~~~
play.i18n.langs=["en" , "ja" ]

# Registers the request handler
# ~~~~~
play.http.requestHandler = "play.api.http.DefaultHttpRequestHandler"

# Registers the filters
# ~~~~~
play.http.filters = "utils.Filters"

# The application DI modules
# ~~~~~
play.modules {

 enabled += "modules.BaseModule"
 enabled += "modules.JobModule"
 enabled += "modules.SilhouetteModule"
 enabled += "play.api.libs.mailer.MailerModule"

<<<<<<< HEAD
=======
 disabled += "com.mohiva.play.silhouette.api.actions.SecuredErrorHandlerModule"
 disabled += "com.mohiva.play.silhouette.api.actions.UnsecuredErrorHandlerModule"

 enabled += "scalikejdbc.PlayModule"
 enabled += "scalikejdbc.PlayDBApiAdapterModule"
 #enabled += "play.modules.swagger.SwaggerModule"
 enabled += "org.flywaydb.play.PlayModule"
 #enabled += "play.filters.csrf.CSRFModule"
 #GuiceModuleでエラーが出る理由は不明
 #enabled += "GuiceModule"

 play.modules.disabled += "play.api.db.DBModule"
}


>>>>>>> recommit
# The asset configuration
# ~~~~~
play.assets {
  path = "/public"
  urlPrefix = "/assets"
<<<<<<< HEAD
}

# Akka config
=======


 # enabled += "GuiceModule"

}

#Akka config
>>>>>>> recommit
akka {
  loglevel = "INFO"
  jvm-exit-on-fatal-error=off

  # Auth token cleaner
  quartz.schedules.AuthTokenCleaner {
    expression = "0 0 */1 * * ?"
    timezone = "UTC"
    description = "cleanup the auth tokens on every hour"
  }
}

# Play mailer
play.mailer {
<<<<<<< HEAD
  host = "localhost"
  port = 25
=======
  host = "smtp.sendgrid.net"
  port = 587
  tls = true
  user = ""
  user = ${?SENDGRID_USERNAME}
  password = ""
  password = ${?SENDGRID_PASSWORD}
# mailは送信しない(開発モード)
>>>>>>> recommit
  mock = true
}

# Security Filter Configuration - Content Security Policy
play.filters.headers {
  contentSecurityPolicy = "default-src 'self';"
  contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" img-src 'self' *.fbcdn.net *.twimg.com *.googleusercontent.com *.xingassets.com vk.com *.yimg.com secure.gravatar.com;"
  contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" style-src 'self' 'unsafe-inline' cdnjs.cloudflare.com maxcdn.bootstrapcdn.com cdn.jsdelivr.net fonts.googleapis.com;"
  contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" font-src 'self' fonts.gstatic.com fonts.googleapis.com cdnjs.cloudflare.com;"
  contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" script-src 'self' cdnjs.cloudflare.com;"
  contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" connect-src 'self' twitter.com *.xing.com;"
}

include "silhouette.conf"


#DBのための部分

play.db {

 default = "default"

 prototype {
 }

}

db {

#   default.driver="com.mysql.cj.jdbc.Driver"
   default.driver="org.mariadb.jdbc.Driver"
#   default.url="jdbc:mysql://127.0.0.1:3306/spetstore?characterEncoding=utf8"
   default.url="jdbc:mariadb://127.0.0.1:3306/spetstore?characterEncoding=utf8"
   default.username= admin
   default.password= admin

   default.poolInitialSize = 10
   default.poolMaxSize = 10
   default.poolValidationQuery = "select 1 as one"

 }


scalikejdbc {
  global {
    loggingSQLAndTime.enabled = true
    loggingSQLAndTime.singleLineMode = true
    loggingSQLAndTime.logLevel = DEBUG
    loggingSQLAndTime.warningEnabled = true
    loggingSQLAndTime.warningThresholdMillis = 5
    loggingSQLAndTime.warningLogLevel = warn
  }
}
